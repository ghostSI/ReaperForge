#include "configuration.h"

#ifdef TEST_BUILD

#include "rijndael.h"
#include "psarc.h"
#include "installer.h"
#include "getopt.h"
#include "settings.h"

#include "SDL2/SDL.h"

#include <filesystem>

static void rijndaelTest() {
    static const u8 psarcKey[] = {
            0xC5, 0x3D, 0xB2, 0x38, 0x70, 0xA1, 0xA2, 0xF7,
            0x1C, 0xAE, 0x64, 0x06, 0x1F, 0xDD, 0x0E, 0x11,
            0x57, 0x30, 0x9D, 0xC8, 0x52, 0x04, 0xD4, 0xC5,
            0xBF, 0xDF, 0x25, 0x09, 0x0D, 0xF2, 0x57, 0x2C
    };

    static const u8 encryptedPsarc[] = {
            0x50, 0x53, 0x41, 0x52, 0x00, 0x01, 0x00, 0x04, 0x7a, 0x6c, 0x69, 0x62,
            0x00, 0x00, 0x04, 0x26, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x19,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x9b, 0x35, 0x0f, 0xf5,
            0x18, 0xb6, 0x64, 0x91, 0x66, 0xfd, 0xea, 0xa7, 0xdc, 0xbc, 0x69, 0xed,
            0x68, 0x11, 0x9a, 0x75, 0x08, 0xdb, 0x0c, 0x5c, 0x3e, 0xfe, 0x7d, 0x09,
            0xd2, 0x89, 0xcc, 0xdb, 0xd4, 0x06, 0xd2, 0x11, 0x81, 0x94, 0x65, 0xf2,
            0x09, 0x63, 0x37, 0xca, 0x7b, 0xb2, 0x9c, 0xbf, 0xe9, 0x0a, 0x3a, 0x0a,
            0x05, 0xc8, 0xf6, 0xcd, 0xab, 0xa3, 0xfe, 0xc9, 0x15, 0x02, 0x4b, 0x70,
            0x69, 0x4e, 0xee, 0x56, 0x45, 0x83, 0xc2, 0x5b, 0x2e, 0xdf, 0xed, 0x76,
            0x72, 0x7a, 0x30, 0xfd, 0x15, 0x1d, 0x39, 0x81, 0x9b, 0x16, 0x8a, 0x81,
            0x08, 0xb9, 0xff, 0xb5, 0xbb, 0xcc, 0x5d, 0x35, 0x6f, 0x18, 0x1e, 0xf0,
            0xf1, 0x57, 0x28, 0x4d, 0x1b, 0x82, 0x74, 0x0a, 0xd5, 0xf1, 0x92, 0x97,
            0xb1, 0xfb, 0xfe, 0x00, 0x25, 0xd4, 0x31, 0x02, 0x82, 0xc2, 0x59, 0xd7,
            0x5f, 0x70, 0x63, 0x67, 0x20, 0x0c, 0xd2, 0xab, 0x41, 0x4d, 0xd4, 0xad,
            0xb9, 0x0c, 0x9b, 0xe4, 0xd7, 0xba, 0x31, 0x5f, 0xb4, 0xae, 0xe6, 0x83,
            0xf4, 0x26, 0x0e, 0x81, 0xcb, 0xa8, 0x26, 0xfc, 0xd7, 0xf7, 0x33, 0x71,
            0x53, 0x03, 0x4b, 0xeb, 0x6e, 0x21, 0x52, 0x42, 0xe2, 0x4e, 0x41, 0xd0,
            0xbd, 0xe7, 0x88, 0x3d, 0xa4, 0x70, 0xd8, 0x90, 0x07, 0x0e, 0x24, 0xe9,
            0xc2, 0xad, 0x81, 0xce, 0x1c, 0x49, 0xf4, 0x86, 0xc4, 0xf6, 0x2a, 0x55,
            0xe6, 0x75, 0x84, 0x01, 0x89, 0x7b, 0xa6, 0xcb, 0x62, 0x82, 0xb5, 0xf1,
            0x46, 0xb8, 0x37, 0x6f, 0x60, 0xcb, 0x5b, 0x7b, 0x6f, 0x76, 0x90, 0x7c,
            0x30, 0xff, 0xa0, 0x26, 0xdd, 0xcc, 0x02, 0xd5, 0xc8, 0xf1, 0xc9, 0x5f,
            0x62, 0xdf, 0x35, 0xcf, 0x3a, 0x90, 0xd6, 0x9a, 0x92, 0xba, 0xbf, 0xae,
            0x90, 0xbd, 0xb7, 0x1c, 0xf1, 0x4f, 0x43, 0x83, 0x4b, 0x2b, 0xb7, 0x6a,
            0x5c, 0xc7, 0x6e, 0x1c, 0xac, 0x8a, 0x22, 0xf8, 0xf5, 0xa3, 0x84, 0x53,
            0xd0, 0xb3, 0xa9, 0x65, 0x63, 0x77, 0x94, 0xb3, 0x27, 0xf9, 0x9e, 0xa5,
            0xd9, 0x07, 0xa7, 0x57, 0xe2, 0x4e, 0x3c, 0x70, 0x81, 0xf2, 0x1a, 0x77,
            0x6d, 0x17, 0xdf, 0xe5, 0x72, 0x8f, 0x1f, 0xd2, 0x41, 0xab, 0xcd, 0xf7,
            0x2a, 0x9b, 0x0b, 0x25, 0x7b, 0x4f, 0x95, 0x52, 0xcc, 0x8f, 0x82, 0xa9,
            0xf3, 0x8d, 0xb1, 0x2b, 0x32, 0x2a, 0x90, 0x0c, 0x87, 0xa6, 0xcf, 0x16,
            0x72, 0xe7, 0x48, 0x30, 0x9d, 0xe7, 0x46, 0x89, 0x42, 0x6a, 0x64, 0xf5,
            0x41, 0x1e, 0x45, 0x0f, 0x19, 0x73, 0x65, 0xb6, 0x16, 0x30, 0x0f, 0x71,
            0x8b, 0xf5, 0xf2, 0x78, 0x4e, 0x35, 0x6d, 0x88, 0x76, 0x49, 0xcb, 0x5e,
            0xc6, 0xd2, 0xa7, 0x9e, 0x70, 0x4a, 0x7b, 0xef, 0x40, 0xf9, 0x7b, 0xe2,
            0x24, 0xe4, 0x5c, 0xa4, 0xa6, 0x11, 0x0f, 0xac, 0xd2, 0x57, 0x37, 0x9c,
            0xab, 0x00, 0x00, 0xf1, 0xff, 0x0d, 0x6a, 0x78, 0x41, 0x06, 0x11, 0x22,
            0x53, 0x48, 0xc1, 0x92, 0x29, 0x2b, 0xab, 0x5e, 0xfc, 0x0a, 0x85, 0xba,
            0x35, 0x8f, 0xde, 0xbb, 0xeb, 0xbc, 0xa9, 0xc2, 0xf0, 0xe8, 0xf9, 0x59,
            0xbf, 0xc3, 0x23, 0x9d, 0x1a, 0x58, 0xa5, 0x32, 0xc3, 0xc5, 0xd3, 0x24,
            0x05, 0xe5, 0x0a, 0xaa, 0xa8, 0x7c, 0x83, 0x6b, 0x97, 0x7d, 0xea, 0x82,
            0x5c, 0x37, 0x2f, 0x63, 0xf2, 0xa4, 0x81, 0x0b, 0x2a, 0xed, 0x58, 0xe6,
            0xe6, 0x51, 0x30, 0x45, 0x53, 0x15, 0xa6, 0xd4, 0x1c, 0xf9, 0x78, 0xc6,
            0x08, 0xa5, 0x04, 0x71, 0x28, 0x6d, 0xc2, 0x60, 0x59, 0xed, 0x59, 0xea,
            0xb3, 0xf4, 0xcb, 0x0b, 0x29, 0x71, 0xb4, 0x94, 0x19, 0x7a, 0x19, 0x87,
            0xd7, 0x09, 0xbc, 0x8a, 0x0e, 0xd9, 0x92, 0x04, 0x41, 0xd8, 0x16, 0x44,
            0xd0, 0xe4, 0x6f, 0xdd, 0x5d, 0x95, 0x90, 0x08, 0xa6, 0x0e, 0x46, 0x49,
            0xac, 0xf7, 0xa8, 0x7d, 0x0c, 0x2a, 0xbb, 0x54, 0x2e, 0xcc, 0xee, 0x1e,
            0x3c, 0xb1, 0xe0, 0x06, 0x74, 0x4f, 0x9f, 0xb3, 0x67, 0x55, 0x2a, 0x6f,
            0xa9, 0x54, 0xfc, 0xd1, 0x3d, 0x46, 0xfd, 0x5f, 0x7e, 0x99, 0x5f, 0x1e,
            0x01, 0x93, 0xb1, 0xc5, 0x48, 0xc8, 0x2b, 0xef, 0x8d, 0x8c, 0x15, 0xe2,
            0x24, 0xe8, 0x3c, 0x81, 0xb3, 0x36, 0x14, 0x15, 0xf8, 0xd9, 0xb5, 0x30,
            0xf3, 0x0d, 0x03, 0x70, 0xa2, 0x91, 0x57, 0x5a, 0x53, 0x4a, 0x6a, 0x72,
            0xf9, 0x8e, 0x03, 0x4b, 0xb5, 0xf6, 0x5b, 0xf9, 0xfe, 0xc5, 0x63, 0x20,
            0x1e, 0x8b, 0xe0, 0xbc, 0x31, 0xf5, 0x5c, 0x68, 0xb2, 0xd1, 0x6c, 0x48,
            0xfb, 0xa6, 0xd9, 0x61, 0x5d, 0xde, 0x27, 0xa3, 0x34, 0x5d, 0x8d, 0x38,
            0x3c, 0x32, 0xb4, 0x7e, 0x9b, 0x00, 0xe8, 0x00, 0x85, 0x37, 0xf2, 0xca,
            0xfd, 0x9e, 0xce, 0x0c, 0xef, 0xf5, 0x69, 0x98, 0xe7, 0x13, 0x22, 0xfc,
            0xee, 0xc7, 0x4c, 0xf2, 0xb5, 0x3e, 0x7c, 0x47, 0x62, 0x42, 0xf9, 0x5e,
            0x91, 0xbc, 0x6c, 0x92, 0xe8, 0xb0, 0x9c, 0x86, 0xe9, 0x25, 0x21, 0x63,
            0x98, 0xea, 0x5b, 0x8b, 0x68, 0x5f, 0x13, 0x1c, 0xcc, 0x2d, 0xd1, 0xbc,
            0x15, 0xb2, 0x71, 0x15, 0x76, 0x60, 0x55, 0x5e, 0xd8, 0x14, 0x8b, 0x6b,
            0x07, 0x80, 0x64, 0xf4, 0xf6, 0x5d, 0x4c, 0x60, 0x3e, 0x2d, 0x18, 0x1d,
            0x57, 0x87, 0x13, 0xb3, 0x7c, 0xc6, 0x06, 0x53, 0x9a, 0xf6, 0xac, 0xb5,
            0x00, 0x4c, 0x49, 0x95, 0xe5, 0x85, 0xa5, 0x2d, 0xe1, 0x4e, 0x4a, 0xe1,
            0x59, 0x9c, 0x72, 0xe6, 0x15, 0x07, 0x15, 0x15, 0x6e, 0x26, 0xb1, 0xa9,
            0x90, 0x07, 0x57, 0x06, 0xc1, 0xf0, 0x14, 0x66, 0xce, 0x34, 0xbf, 0x44,
            0x84, 0xfe, 0x82, 0x5a, 0x01, 0x32, 0x9e, 0xe6, 0x4d, 0x9c, 0x34, 0xfd,
            0xc9, 0xfd, 0x90, 0x2e, 0x38, 0x32, 0x7e, 0x0f, 0xfa, 0x6c, 0xbf, 0xdc,
            0xdc, 0xc3, 0x7a, 0xba, 0xac, 0x8a, 0xed, 0xd8, 0x43, 0x1f, 0xa7, 0xc8,
            0x38, 0x2d, 0xd4, 0xa0, 0xd2, 0xe0, 0x78, 0x7a, 0xe9, 0x52, 0x31, 0x41,
            0x90, 0xfd, 0x8e, 0x77, 0x01, 0x50, 0x14, 0xab, 0xda, 0x58, 0xd3, 0xb6,
            0x73, 0xc8, 0x96, 0x51, 0xbc, 0xa5, 0x23, 0x4d, 0xab, 0x4b, 0xb2, 0xc7,
            0x11, 0xfa, 0x92, 0x4e, 0x11, 0x89, 0xf7, 0x11, 0x86, 0xdb, 0x7e, 0xbc,
            0x2b, 0x7c, 0x2e, 0xe0, 0x1b, 0x76, 0x57, 0x28, 0xa0, 0x91, 0xac, 0x86,
            0x68, 0xc6, 0x0b, 0x10, 0x0a, 0x13, 0x62, 0xf9, 0x89, 0xdf, 0xd5, 0x4f,
            0xc9, 0xfa, 0xb1, 0x92, 0x60, 0x3c, 0x56, 0xfb, 0x25, 0x96, 0x44, 0x5b,
            0xa8, 0x3d, 0x29, 0xcc, 0xc2, 0x79, 0xa2, 0x27, 0x86, 0x23, 0x12, 0x1f,
            0x9a, 0xb7, 0x62, 0x53, 0xd7, 0x3e, 0x8b, 0x30, 0x15, 0xbb, 0x39, 0x89,
            0x07, 0x75, 0x2b, 0xd1, 0x33, 0x36, 0xee, 0x46, 0xb5, 0x29, 0x44, 0x48,
            0xb6, 0x04, 0x95, 0xcf, 0xa6, 0x8d, 0x85, 0x04, 0xb5, 0x6e, 0xe5, 0x34,
            0x42, 0x70, 0xff, 0xea, 0xe8, 0xde, 0xa8, 0xf7, 0x76, 0x77, 0x4b, 0x4b,
            0xb4, 0xcd, 0xd8, 0xeb, 0x8f, 0xec, 0x70, 0xf3, 0xc5, 0x64, 0xd8, 0xe0,
            0xd7, 0x8b, 0x7e, 0x0f, 0x41, 0x00, 0xb2, 0x5a, 0xf6, 0x85, 0xde, 0xd2,
            0xba, 0xa0, 0x7f, 0xb3, 0x6f, 0xfb, 0x42, 0x7b, 0xbe, 0x4a, 0x42, 0x26,
            0xb6, 0x88, 0xda, 0x9f, 0x8e, 0xc5, 0x23, 0x30, 0xb6, 0x58, 0x8e, 0x57,
            0xb3, 0xfd, 0x8e, 0x92, 0x3e, 0x32, 0x51, 0x99, 0xfd, 0x76, 0xc5, 0x93,
            0x9f, 0xf3, 0x48, 0x83, 0x18, 0x2a, 0xc8, 0xaf, 0xee, 0x72, 0xdc, 0x3b,
            0x7a, 0xe4, 0x49, 0x85, 0xbe, 0x51, 0x81, 0x60, 0xac, 0x7c, 0x1b, 0x4f
    };

    unsigned char expectedPlainText[] = {
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
            0xdd, 0x00, 0x00, 0x00, 0x04, 0x26, 0x29, 0xa8, 0xc0, 0x34, 0x0c, 0xdc,
            0x9a, 0x33, 0x37, 0x77, 0xca, 0x15, 0xd6, 0xf1, 0xc0, 0x7d, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x05, 0x4d,
            0x83, 0xb1, 0xa2, 0xda, 0x29, 0x53, 0xf3, 0xe0, 0xf7, 0x9f, 0xb7, 0x68,
            0x90, 0x7c, 0x91, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20,
            0x80, 0x00, 0x00, 0x00, 0x0a, 0xed, 0xed, 0x30, 0x0c, 0x52, 0xc0, 0x57,
            0x0b, 0x83, 0x19, 0xb2, 0x56, 0xa0, 0x69, 0x97, 0xfd, 0x3f, 0x00, 0x00,
            0x00, 0x03, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x1e, 0xab,
            0x16, 0x9b, 0x7d, 0x23, 0xd5, 0xde, 0xd1, 0x7b, 0x9c, 0xd7, 0x38, 0x34,
            0xe6, 0x71, 0xb8, 0x5b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01,
            0x66, 0x00, 0x00, 0x00, 0x66, 0x6e, 0xf3, 0x66, 0x5d, 0x1b, 0xf6, 0x56,
            0xe6, 0x8f, 0x34, 0xe4, 0xc9, 0xac, 0xe8, 0x23, 0x7e, 0x2f, 0x00, 0x00,
            0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0xcf, 0x00, 0x00, 0x00, 0x67, 0x3e,
            0x99, 0x07, 0x9b, 0x19, 0x21, 0xc1, 0xa9, 0xc2, 0xb2, 0xae, 0x1e, 0xdc,
            0x88, 0xaa, 0xb2, 0x69, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
            0xbd, 0x00, 0x00, 0x00, 0x68, 0xbb, 0x8f, 0x63, 0xcc, 0x58, 0x19, 0xe2,
            0xd7, 0x76, 0xda, 0x20, 0xbb, 0xa4, 0x66, 0x18, 0x88, 0x58, 0x00, 0x00,
            0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x69, 0x43,
            0x54, 0xaf, 0xef, 0x35, 0x7e, 0x97, 0x9d, 0x51, 0x73, 0xa3, 0x80, 0xd9,
            0xca, 0x1a, 0x3c, 0xd4, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xc9,
            0x3b, 0x00, 0x00, 0x00, 0x69, 0x49, 0xc8, 0x9c, 0x45, 0x43, 0x5f, 0x44,
            0x81, 0xf7, 0x5f, 0xc2, 0xc0, 0xe2, 0x33, 0xcf, 0xbb, 0x8b, 0x00, 0x00,
            0x00, 0x09, 0x00, 0x00, 0x57, 0x5c, 0x8c, 0x00, 0x00, 0x01, 0x2a, 0xa6,
            0xc5, 0xcf, 0x99, 0x7f, 0x79, 0x66, 0x9f, 0x95, 0xf0, 0xed, 0x28, 0xb3,
            0x62, 0x74, 0xc1, 0x3d, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0xc9,
            0x43, 0x00, 0x00, 0x58, 0x5f, 0xbe, 0x91, 0x78, 0x89, 0x9c, 0x7a, 0x8c,
            0xe3, 0xbb, 0xda, 0xb2, 0xea, 0x70, 0x61, 0x8e, 0xd7, 0xa8, 0x00, 0x00,
            0x00, 0x62, 0x00, 0x00, 0x05, 0xf9, 0x8e, 0x00, 0x00, 0x59, 0x27, 0x5e,
            0x18, 0xf0, 0xd2, 0xac, 0x2a, 0x52, 0x5e, 0x1e, 0x4d, 0x1e, 0x98, 0xda,
            0xf1, 0x01, 0x28, 0xe4, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x34,
            0x29, 0x00, 0x00, 0x5f, 0x19, 0x57, 0x2b, 0xd6, 0x45, 0xb5, 0x4d, 0x71,
            0xbe, 0x89, 0x27, 0xf0, 0x69, 0x29, 0xc0, 0x9f, 0x7f, 0xd1, 0x00, 0x00,
            0x00, 0x69, 0x00, 0x00, 0x04, 0x00, 0x40, 0x00, 0x00, 0x5f, 0x1e, 0x9a,
            0xd4, 0x59, 0xb7, 0x8b, 0x9e, 0xe0, 0x32, 0x3b, 0x5e, 0x8b, 0xfa, 0x40,
            0xa3, 0xcb, 0x12, 0x40, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x0d, 0xdb,
            0x2d, 0x00, 0x00, 0x61, 0x1f, 0xe7, 0xd7, 0xe8, 0x7d, 0x3c, 0x81, 0x76,
            0xb3, 0xb0, 0xa1, 0x1f, 0xbc, 0xd6, 0xbc, 0x90, 0xfe, 0x1f, 0x00, 0x00,
            0x00, 0x7c, 0x00, 0x00, 0x00, 0xb7, 0xb2, 0x00, 0x00, 0x62, 0x5c, 0x6b,
            0x4e, 0x2b, 0xfb, 0x1f, 0xe9, 0xa6, 0x7b, 0x55, 0x1d, 0x33, 0xb7, 0xb7,
            0xed, 0xaf, 0x66, 0xb0, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x02, 0x00,
            0x40, 0x00, 0x00, 0x62, 0x6b, 0x4f, 0x4d, 0x6c, 0x47, 0x2e, 0xad, 0x3b,
            0xd1, 0x2a, 0x2e, 0x48, 0x6c, 0x91, 0x0a, 0xc1, 0xaf, 0xa9, 0x00, 0x00,
            0x00, 0x80, 0x00, 0x00, 0x04, 0x50, 0x39, 0x00, 0x00, 0x63, 0x6c, 0x1a,
            0xe2, 0x4a, 0x46, 0x8e, 0x1f, 0xf8, 0xaa, 0x4b, 0x80, 0x99, 0x03, 0x21,
            0x12, 0xf9, 0xe3, 0xfa, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x43,
            0xd3, 0x00, 0x00, 0x63, 0xc8, 0x55, 0xb8, 0x86, 0x02, 0x51, 0xe5, 0xdd,
            0x4e, 0xd4, 0x2b, 0xdd, 0x5c, 0xdf, 0x53, 0x98, 0x50, 0x88, 0x00, 0x00,
            0x00, 0x86, 0x00, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x63, 0xd2, 0xad,
            0x57, 0x4c, 0x32, 0x85, 0x41, 0xf7, 0x8c, 0x6d, 0x8f, 0xb3, 0x17, 0x4a,
            0x60, 0xb2, 0xfa, 0x72, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x1b,
            0xf2, 0x00, 0x00, 0x63, 0xe1, 0xd7, 0x55, 0x6b, 0x95, 0x4e, 0x44, 0xab,
            0xf2, 0x8a, 0xe6, 0x19, 0x8b, 0xa8, 0x2c, 0x8a, 0x60, 0x0d, 0x00, 0x00,
            0x00, 0x88, 0x00, 0x00, 0x00, 0x08, 0x34, 0x00, 0x00, 0x63, 0xe7, 0x0a,
            0x71, 0x6c, 0x5b, 0x19, 0x40, 0x7b, 0xc2, 0xd9, 0x61, 0x28, 0x60, 0x7e,
            0x9c, 0xbe, 0x15, 0x39, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x0e,
            0xdd, 0x00, 0x00, 0x63, 0xe9, 0xb0, 0xaa, 0xd3, 0x03, 0x33, 0xef, 0x48,
            0xc6, 0x31, 0x90, 0xc1, 0xe8, 0x9d, 0xad, 0x49, 0x39, 0x59, 0x00, 0x00,
            0x00, 0x8a, 0x00, 0x00, 0x00, 0x0f, 0xbf, 0x00, 0x00, 0x63, 0xec, 0xec,
            0xe0, 0xb9, 0xde, 0xfb, 0x72, 0x19, 0x4e, 0x06, 0xa1, 0x0d, 0x6b, 0x4f,
            0x06, 0x4f, 0xe9, 0x86, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x12,
            0xc3, 0x00, 0x00, 0x63, 0xef, 0xc6, 0x01, 0x27, 0x05, 0xa0, 0x13, 0xbe,
            0x47, 0xc3, 0x00, 0xd0, 0x01, 0x7d, 0x00, 0x88, 0x00, 0x06, 0xc1, 0x5d,
            0xf8, 0x81, 0xff, 0xdb, 0xff, 0xb4, 0xff, 0xba, 0xff, 0x55, 0xfe, 0x8e,
            0xfe, 0x59, 0xff, 0x4b, 0xfe, 0xbb, 0xfe, 0xbe, 0xff, 0x72, 0xff, 0xbe,
            0xff, 0xe4, 0xff, 0xc7, 0xff, 0xf5, 0xff, 0xd4, 0xff, 0xe8, 0xff, 0xce,
            0xff, 0x71, 0xfe, 0xf3, 0xff, 0x02, 0xfe, 0xd0, 0xff, 0x95, 0xfe, 0xfd,
            0xff, 0xca, 0xff, 0x44, 0xfe, 0xac, 0xff, 0x9b, 0xff, 0xc9, 0xff, 0xb5,
            0xff, 0xee, 0xff, 0xb3, 0xff, 0xbd, 0xff, 0xc0, 0xff, 0xcb, 0xff, 0xef,
            0xff, 0xea, 0xff, 0xf7, 0xff, 0xf8, 0xff, 0xda, 0xff, 0x80, 0xff, 0xd2,
            0xff, 0xad, 0xff, 0xbb, 0xff, 0xd0, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xe5,
            0xff, 0xe1, 0xff, 0xa6, 0xff, 0xd1, 0xff, 0x9c, 0xff, 0xb9, 0xff, 0xc3,
            0xff, 0xcc, 0xff, 0xc3, 0xff, 0xe5, 0xff, 0xf8, 0xff, 0xfb, 0x00, 0x00,
            0x00, 0x00, 0xff, 0xe2, 0xff, 0xe5, 0xff, 0x10, 0xff, 0xd9, 0xff, 0x16,
            0xff, 0x9f, 0xff, 0xa3, 0xff, 0x17, 0xff, 0xe8, 0x00, 0x00, 0xff, 0xbd,
            0xff, 0xd5, 0xff, 0x7e, 0xff, 0xd1, 0xff, 0xd9, 0xff, 0xcf, 0xff, 0xbc,
            0xff, 0xef, 0xff, 0xd6, 0xff, 0x5f, 0xff, 0x7a, 0xff, 0xe4, 0xff, 0x74,
            0xff, 0xd0, 0xff, 0xbf, 0xff, 0xb9, 0x5c, 0x1e, 0xc7, 0xa0, 0xfe, 0x69,
            0xfe, 0x65, 0xff, 0x0f, 0xfe, 0xdc, 0xfe, 0xdb, 0xf8, 0x65, 0x05, 0x43,
            0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0x00, 0x54, 0x00, 0x0c, 0x1e, 0xb3,
            0x15, 0x2b, 0x18, 0x68, 0x0f, 0x4d, 0x19, 0x09, 0x17, 0xc3, 0x17, 0xb1,
            0x13, 0xdb, 0x1a, 0xa5, 0x12, 0x42, 0x1a, 0xdd, 0x17, 0xf1, 0x12, 0x9b,
            0x12, 0x49, 0x0e, 0xe4, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x0c, 0x1f, 0x78,
            0x10, 0x50, 0x11, 0x2f, 0x13, 0x6d, 0x07, 0xd7, 0x0a, 0x58, 0x0f, 0x2a,
            0x05, 0x33, 0x02, 0xa6
    };

    const size_t encPsarcLen = sizeof(encryptedPsarc);
    const size_t plainTextLen = encPsarcLen - 32;

    ASSERT(encPsarcLen == 1056);
    ASSERT(plainTextLen == 1024);

    u8 plainText[plainTextLen];

    Rijndael::decrypt(psarcKey, &encryptedPsarc[32], plainText, plainTextLen);
    for (size_t i = 0; i < plainTextLen; ++i)
        ASSERT(expectedPlainText[i] == plainText[i]);

    Rijndael::decrypt(psarcKey, &encryptedPsarc[32], plainText, plainTextLen);
    for (size_t i = 0; i < plainTextLen; ++i)
        ASSERT(expectedPlainText[i] == plainText[i]);
}

static void psarcTOCTest() {

    static const std::vector<u8> psarcData = {
            80, 83, 65, 82, 0, 1, 0, 4, 122, 108, 105, 98,
            0, 0, 4, 38, 0, 0, 0, 30, 0, 0, 0, 25,
            0, 1, 0, 0, 0, 0, 0, 4, 155, 53, 15, 245,
            24, 182, 100, 145, 102, 253, 234, 167, 220, 188, 105, 237,
            104, 17, 154, 117, 8, 219, 12, 92, 62, 254, 125, 9,
            210, 137, 204, 219, 212, 6, 210, 17, 129, 148, 101, 242,
            9, 99, 55, 202, 123, 178, 156, 191, 233, 10, 58, 10,
            5, 200, 246, 205, 171, 163, 254, 201, 21, 2, 75, 112,
            105, 78, 238, 86, 69, 131, 194, 91, 46, 223, 237, 118,
            114, 122, 48, 253, 21, 29, 57, 129, 155, 22, 138, 129,
            8, 185, 255, 181, 187, 204, 93, 53, 111, 24, 30, 240,
            241, 87, 40, 77, 27, 130, 116, 10, 213, 241, 146, 151,
            177, 251, 254, 0, 37, 212, 49, 2, 130, 194, 89, 215,
            95, 112, 99, 103, 32, 12, 210, 171, 65, 77, 212, 173,
            185, 12, 155, 228, 215, 186, 49, 95, 180, 174, 230, 131,
            244, 38, 14, 129, 203, 168, 38, 252, 215, 247, 51, 113,
            83, 3, 75, 235, 110, 33, 82, 66, 226, 78, 65, 208,
            189, 231, 136, 61, 164, 112, 216, 144, 7, 14, 36, 233,
            194, 173, 129, 206, 28, 73, 244, 134, 196, 246, 42, 85,
            230, 117, 132, 1, 137, 123, 166, 203, 98, 130, 181, 241,
            70, 184, 55, 111, 96, 203, 91, 123, 111, 118, 144, 124,
            48, 255, 160, 38, 221, 204, 2, 213, 200, 241, 201, 95,
            98, 223, 53, 207, 58, 144, 214, 154, 146, 186, 191, 174,
            144, 189, 183, 28, 241, 79, 67, 131, 75, 43, 183, 106,
            92, 199, 110, 28, 172, 138, 34, 248, 245, 163, 132, 83,
            208, 179, 169, 101, 99, 119, 148, 179, 39, 249, 158, 165,
            217, 7, 167, 87, 226, 78, 60, 112, 129, 242, 26, 119,
            109, 23, 223, 229, 114, 143, 31, 210, 65, 171, 205, 247,
            42, 155, 11, 37, 123, 79, 149, 82, 204, 143, 130, 169,
            243, 141, 177, 43, 50, 42, 144, 12, 135, 166, 207, 22,
            114, 231, 72, 48, 157, 231, 70, 137, 66, 106, 100, 245,
            65, 30, 69, 15, 25, 115, 101, 182, 22, 48, 15, 113,
            139, 245, 242, 120, 78, 53, 109, 136, 118, 73, 203, 94,
            198, 210, 167, 158, 112, 74, 123, 239, 64, 249, 123, 226,
            36, 228, 92, 164, 166, 17, 15, 172, 210, 87, 55, 156,
            171, 0, 0, 241, 255, 13, 106, 120, 65, 6, 17, 34,
            83, 72, 193, 146, 41, 43, 171, 94, 252, 10, 133, 186,
            53, 143, 222, 187, 235, 188, 169, 194, 240, 232, 249, 89,
            191, 195, 35, 157, 26, 88, 165, 50, 195, 197, 211, 36,
            5, 229, 10, 170, 168, 124, 131, 107, 151, 125, 234, 130,
            92, 55, 47, 99, 242, 164, 129, 11, 42, 237, 88, 230,
            230, 81, 48, 69, 83, 21, 166, 212, 28, 249, 120, 198,
            8, 165, 4, 113, 40, 109, 194, 96, 89, 237, 89, 234,
            179, 244, 203, 11, 41, 113, 180, 148, 25, 122, 25, 135,
            215, 9, 188, 138, 14, 217, 146, 4, 65, 216, 22, 68,
            208, 228, 111, 221, 93, 149, 144, 8, 166, 14, 70, 73,
            172, 247, 168, 125, 12, 42, 187, 84, 46, 204, 238, 30,
            60, 177, 224, 6, 116, 79, 159, 179, 103, 85, 42, 111,
            169, 84, 252, 209, 61, 70, 253, 95, 126, 153, 95, 30,
            1, 147, 177, 197, 72, 200, 43, 239, 141, 140, 21, 226,
            36, 232, 60, 129, 179, 54, 20, 21, 248, 217, 181, 48,
            243, 13, 3, 112, 162, 145, 87, 90, 83, 74, 106, 114,
            249, 142, 3, 75, 181, 246, 91, 249, 254, 197, 99, 32,
            30, 139, 224, 188, 49, 245, 92, 104, 178, 209, 108, 72,
            251, 166, 217, 97, 93, 222, 39, 163, 52, 93, 141, 56,
            60, 50, 180, 126, 155, 0, 232, 0, 133, 55, 242, 202,
            253, 158, 206, 12, 239, 245, 105, 152, 231, 19, 34, 252,
            238, 199, 76, 242, 181, 62, 124, 71, 98, 66, 249, 94,
            145, 188, 108, 146, 232, 176, 156, 134, 233, 37, 33, 99,
            152, 234, 91, 139, 104, 95, 19, 28, 204, 45, 209, 188,
            21, 178, 113, 21, 118, 96, 85, 94, 216, 20, 139, 107,
            7, 128, 100, 244, 246, 93, 76, 96, 62, 45, 24, 29,
            87, 135, 19, 179, 124, 198, 6, 83, 154, 246, 172, 181,
            0, 76, 73, 149, 229, 133, 165, 45, 225, 78, 74, 225,
            89, 156, 114, 230, 21, 7, 21, 21, 110, 38, 177, 169,
            144, 7, 87, 6, 193, 240, 20, 102, 206, 52, 191, 68,
            132, 254, 130, 90, 1, 50, 158, 230, 77, 156, 52, 253,
            201, 253, 144, 46, 56, 50, 126, 15, 250, 108, 191, 220,
            220, 195, 122, 186, 172, 138, 237, 216, 67, 31, 167, 200,
            56, 45, 212, 160, 210, 224, 120, 122, 233, 82, 49, 65,
            144, 253, 142, 119, 1, 80, 20, 171, 218, 88, 211, 182,
            115, 200, 150, 81, 188, 165, 35, 77, 171, 75, 178, 199,
            17, 250, 146, 78, 17, 137, 247, 17, 134, 219, 126, 188,
            43, 124, 46, 224, 27, 118, 87, 40, 160, 145, 172, 134,
            104, 198, 11, 16, 10, 19, 98, 249, 137, 223, 213, 79,
            201, 250, 177, 146, 96, 60, 86, 251, 37, 150, 68, 91,
            168, 61, 41, 204, 194, 121, 162, 39, 134, 35, 18, 31,
            154, 183, 98, 83, 215, 62, 139, 48, 21, 187, 57, 137,
            7, 117, 43, 209, 51, 54, 238, 70, 181, 41, 68, 72,
            182, 4, 149, 207, 166, 141, 133, 4, 181, 110, 229, 52,
            66, 112, 255, 234, 232, 222, 168, 247, 118, 119, 75, 75,
            180, 205, 216, 235, 143, 236, 112, 243, 197, 100, 216, 224,
            215, 139, 126, 15, 65, 0, 178, 90, 246, 133, 222, 210,
            186, 160, 127, 179, 111, 251, 66, 123, 190, 74, 66, 38,
            182, 136, 218, 159, 142, 197, 35, 48, 182, 88, 142, 87,
            179, 253, 142, 146, 62, 50, 81, 153, 253, 118, 197, 147,
            159, 243, 72, 131, 24, 42, 200, 175, 238, 114, 220, 59,
            122, 228, 73, 133, 190, 81, 129, 96, 172, 124, 27, 79,
            25, 59, 224, 144, 23, 89, 120, 218, 173, 146, 221, 142,
            131, 32, 16, 133, 239, 125, 24, 88, 109, 181, 125, 27,
            51, 202, 20, 103, 139, 131, 97, 80, 251, 248, 245, 239,
            106, 179, 177, 181, 105, 66, 8, 129, 115, 190, 57, 39,
            193, 222, 30, 32, 130, 81, 52, 184, 170, 111, 75, 8,
            113, 59, 25, 8, 212, 8, 52, 220, 115, 36, 71, 209,
            123, 67, 34, 222, 13, 88, 22, 103, 101, 140, 36, 246,
            19, 111, 154, 93, 63, 55, 103, 121, 177, 152, 111, 14,
            98, 235, 13, 58, 209, 97, 94, 200, 125, 139, 1, 42,
            135, 101, 240, 62, 170, 249, 125, 79, 36, 158, 237, 42,
            154, 232, 238, 78, 81, 13, 24, 132, 60, 39, 208, 117,
            100, 212, 178, 39, 208, 27, 242, 122, 36, 54, 126, 20,
            61, 123, 118, 178, 169, 138, 239, 127, 28, 105, 158, 230,
            151, 211, 79, 158, 158, 213, 136, 237, 49, 92, 217, 5,
            28, 8, 199, 127, 176, 89, 126, 186, 92, 139, 34, 75,
            23, 234, 14, 2, 172, 13, 104, 33, 162, 13, 208, 53,
            138, 99, 50, 15, 21, 93, 17, 107, 139, 140, 129, 106,
            189, 99, 119, 8, 70, 9, 219, 205, 5, 33, 188, 84,
            63, 90, 151, 180, 192, 116, 67, 137, 107, 69, 41, 141,
            171, 119, 122, 190, 68, 254, 78, 148, 99, 185, 171, 233,
            95, 189, 159, 123, 81, 127, 55, 247, 130, 60, 158, 123,
            240, 53, 184, 3, 201, 55, 253, 119, 179, 111, 208, 37,
            253, 65, 234, 59, 34, 53, 93, 243, 123, 245, 164, 241,
            163, 35, 219, 196, 181, 162, 133, 22, 31, 149, 243, 245,
            93, 52, 175, 128, 157, 49, 171, 242, 9, 10, 97, 236,
            247, 120, 218, 157, 85, 65, 104, 27, 71, 20, 29, 45,
            81, 43, 109, 15, 53, 113, 173, 64, 78, 166, 176, 194,
            154, 28, 138, 209, 33, 148, 230, 96, 7, 231, 144, 208,
            131, 26, 105, 54, 171, 37, 7, 197, 160, 98, 109, 46,
            133, 232, 80, 104, 3, 43, 149, 128, 35, 122, 80, 64,
            107, 108, 225, 194, 70, 104, 196, 238, 16, 29, 12, 157,
            67, 15, 155, 219, 230, 102, 65, 10, 18, 52, 7, 229,
            150, 64, 123, 48, 53, 84, 134, 94, 220, 255, 103, 125,
            107, 79, 93, 88, 30, 127, 118, 230, 191, 247, 255, 252,
            255, 119, 107, 171, 188, 250, 61, 33, 228, 195, 165, 12,
            217, 0, 196, 151, 100, 200, 255, 122, 86, 225, 189, 4,
            239, 150, 85, 89, 255, 207, 13, 75, 255, 94, 154, 198,
            139, 152, 179, 7, 15, 16, 133, 224, 92, 70, 211, 56,
            228, 245, 58, 162, 166, 83, 42, 35, 25, 119, 132, 16,
            136, 237, 1, 226, 52, 166, 34, 236, 163, 29, 192, 122,
            15, 108, 95, 136, 62, 174, 11, 145, 156, 19, 98, 175,
            238, 33, 210, 17, 235, 193, 62, 49, 242, 18, 12, 71,
            162, 9, 168, 211, 60, 45, 203, 94, 212, 17, 13, 182,
            136, 115, 19, 162, 11, 129, 252, 198, 218, 136, 35, 18,
            146, 240, 132, 30, 99, 136, 187, 34, 84, 216, 23, 137,
            61, 18, 172, 145, 240, 216, 202, 118, 236, 42, 83, 231,
            180, 129, 242, 227, 250, 98, 128, 168, 193, 115, 17, 143,
            135, 252, 97, 195, 105, 160, 94, 160, 27, 161, 77, 5,
            165, 200, 15, 97, 8, 68, 93, 215, 180, 36, 15, 161,
            242, 67, 97, 163, 84, 118, 162, 47, 227, 250, 29, 25,
            45, 142, 19, 251, 219, 217, 48, 32, 100, 6, 88, 160,
            73, 30, 169, 190, 219, 79, 244, 235, 186, 226, 13, 29,
            129, 121, 96, 42, 79, 50, 118, 196, 128, 32, 230, 219,
            254, 70, 79, 229, 71, 40, 126, 26, 134, 34, 201, 195,
            5, 191, 109, 87, 213, 189, 136, 66, 120, 161, 163, 131,
            24, 4, 23, 58, 52, 170, 48, 216, 213, 244, 100, 61,
            192, 239, 199, 59, 23, 58, 11, 97, 88, 72, 116, 184,
            157, 228, 30, 184, 7, 121, 143, 68, 64, 121, 51, 234,
            69, 182, 181, 227, 163, 14, 30, 100, 200, 25, 240, 178,
            6, 87, 252, 89, 93, 87, 254, 108, 214, 56, 80, 40,
            10, 202, 214, 51, 73, 124, 193, 78, 16, 40, 125, 33,
            230, 235, 222, 140, 100, 242, 214, 52, 190, 50, 1, 158,
            167, 179, 120, 101, 2, 58, 130, 247, 155, 139, 152, 49,
            47, 157, 160, 89, 193, 252, 229, 169, 97, 0, 95, 68,
            41, 45, 32, 127, 127, 20, 182, 16, 141, 17, 205, 44,
            143, 23, 199, 140, 49, 227, 116, 248, 219, 59, 144, 175,
            252, 87, 77, 207, 83, 113, 95, 220, 159, 227, 132, 207,
            17, 25, 179, 239, 150, 37, 248, 229, 105, 163, 44, 175,
            76, 76, 211, 170, 77, 227, 235, 19, 195, 160, 180, 123,
            152, 240, 213, 215, 167, 113, 218, 48, 178, 91, 192, 100,
            149, 8, 121, 181, 137, 231, 88, 5, 243, 160, 211, 61,
            200, 131, 23, 233, 162, 202, 144, 63, 240, 125, 186, 60,
            150, 241, 138, 145, 89, 5, 191, 199, 37, 171, 82, 153,
            170, 122, 112, 59, 139, 248, 229, 25, 116, 83, 190, 44,
            167, 241, 166, 230, 166, 144, 215, 169, 109, 147, 102, 148,
            155, 24, 117, 199, 189, 243, 221, 141, 247, 208, 46, 124,
            121, 12, 254, 205, 158, 91, 95, 47, 142, 109, 45, 203,
            70, 159, 203, 88, 35, 107, 222, 86, 1, 207, 107, 160,
            163, 34, 173, 82, 169, 132, 126, 60, 182, 191, 189, 60,
            238, 69, 204, 174, 85, 47, 3, 122, 172, 146, 46, 194,
            186, 101, 99, 125, 46, 142, 237, 154, 239, 78, 227, 251,
            39, 144, 207, 141, 41, 240, 231, 174, 118, 75, 69, 217,
            148, 173, 14, 247, 138, 114, 14, 254
    };

    static u8 expectedTOCPlainText[] = {
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
            221, 0, 0, 0, 4, 38, 41, 168, 192, 52, 12, 220,
            154, 51, 55, 119, 202, 21, 214, 241, 192, 125, 0, 0,
            0, 1, 0, 0, 0, 8, 128, 0, 0, 0, 5, 77,
            131, 177, 162, 218, 41, 83, 243, 224, 247, 159, 183, 104,
            144, 124, 145, 29, 0, 0, 0, 2, 0, 0, 0, 32,
            128, 0, 0, 0, 10, 237, 237, 48, 12, 82, 192, 87,
            11, 131, 25, 178, 86, 160, 105, 151, 253, 63, 0, 0,
            0, 3, 0, 0, 0, 128, 128, 0, 0, 0, 30, 171,
            22, 155, 125, 35, 213, 222, 209, 123, 156, 215, 56, 52,
            230, 113, 184, 91, 0, 0, 0, 4, 0, 0, 0, 1,
            102, 0, 0, 0, 102, 110, 243, 102, 93, 27, 246, 86,
            230, 143, 52, 228, 201, 172, 232, 35, 126, 47, 0, 0,
            0, 5, 0, 0, 0, 5, 207, 0, 0, 0, 103, 62,
            153, 7, 155, 25, 33, 193, 169, 194, 178, 174, 30, 220,
            136, 170, 178, 105, 0, 0, 0, 6, 0, 0, 0, 0,
            189, 0, 0, 0, 104, 187, 143, 99, 204, 88, 25, 226,
            215, 118, 218, 32, 187, 164, 102, 24, 136, 88, 0, 0,
            0, 7, 0, 0, 0, 0, 6, 0, 0, 0, 105, 67,
            84, 175, 239, 53, 126, 151, 157, 81, 115, 163, 128, 217,
            202, 26, 60, 212, 0, 0, 0, 8, 0, 0, 0, 201,
            59, 0, 0, 0, 105, 73, 200, 156, 69, 67, 95, 68,
            129, 247, 95, 194, 192, 226, 51, 207, 187, 139, 0, 0,
            0, 9, 0, 0, 87, 92, 140, 0, 0, 1, 42, 166,
            197, 207, 153, 127, 121, 102, 159, 149, 240, 237, 40, 179,
            98, 116, 193, 61, 0, 0, 0, 97, 0, 0, 0, 201,
            67, 0, 0, 88, 95, 190, 145, 120, 137, 156, 122, 140,
            227, 187, 218, 178, 234, 112, 97, 142, 215, 168, 0, 0,
            0, 98, 0, 0, 5, 249, 142, 0, 0, 89, 39, 94,
            24, 240, 210, 172, 42, 82, 94, 30, 77, 30, 152, 218,
            241, 1, 40, 228, 0, 0, 0, 104, 0, 0, 0, 52,
            41, 0, 0, 95, 25, 87, 43, 214, 69, 181, 77, 113,
            190, 137, 39, 240, 105, 41, 192, 159, 127, 209, 0, 0,
            0, 105, 0, 0, 4, 0, 64, 0, 0, 95, 30, 154,
            212, 89, 183, 139, 158, 224, 50, 59, 94, 139, 250, 64,
            163, 203, 18, 64, 0, 0, 0, 110, 0, 0, 13, 219,
            45, 0, 0, 97, 31, 231, 215, 232, 125, 60, 129, 118,
            179, 176, 161, 31, 188, 214, 188, 144, 254, 31, 0, 0,
            0, 124, 0, 0, 0, 183, 178, 0, 0, 98, 92, 107,
            78, 43, 251, 31, 233, 166, 123, 85, 29, 51, 183, 183,
            237, 175, 102, 176, 0, 0, 0, 125, 0, 0, 2, 0,
            64, 0, 0, 98, 107, 79, 77, 108, 71, 46, 173, 59,
            209, 42, 46, 72, 108, 145, 10, 193, 175, 169, 0, 0,
            0, 128, 0, 0, 4, 80, 57, 0, 0, 99, 108, 26,
            226, 74, 70, 142, 31, 248, 170, 75, 128, 153, 3, 33,
            18, 249, 227, 250, 0, 0, 0, 133, 0, 0, 0, 67,
            211, 0, 0, 99, 200, 85, 184, 134, 2, 81, 229, 221,
            78, 212, 43, 221, 92, 223, 83, 152, 80, 136, 0, 0,
            0, 134, 0, 0, 0, 16, 64, 0, 0, 99, 210, 173,
            87, 76, 50, 133, 65, 247, 140, 109, 143, 179, 23, 74,
            96, 178, 250, 114, 0, 0, 0, 135, 0, 0, 0, 27,
            242, 0, 0, 99, 225, 215, 85, 107, 149, 78, 68, 171,
            242, 138, 230, 25, 139, 168, 44, 138, 96, 13, 0, 0,
            0, 136, 0, 0, 0, 8, 52, 0, 0, 99, 231, 10,
            113, 108, 91, 25, 64, 123, 194, 217, 97, 40, 96, 126,
            156, 190, 21, 57, 0, 0, 0, 137, 0, 0, 0, 14,
            221, 0, 0, 99, 233, 176, 170, 211, 3, 51, 239, 72,
            198, 49, 144, 193, 232, 157, 173, 73, 57, 89, 0, 0,
            0, 138, 0, 0, 0, 15, 191, 0, 0, 99, 236, 236,
            224, 185, 222, 251, 114, 25, 78, 6, 161, 13, 107, 79,
            6, 79, 233, 134, 0, 0, 0, 139, 0, 0, 0, 18,
            195, 0, 0, 99, 239, 198, 1, 39, 5, 160, 19, 190,
            71, 195, 0, 208, 1, 125, 0, 136, 0, 6, 193, 93,
            248, 129, 255, 219, 255, 180, 255, 186, 255, 85, 254, 142,
            254, 89, 255, 75, 254, 187, 254, 190, 255, 114, 255, 190,
            255, 228, 255, 199, 255, 245, 255, 212, 255, 232, 255, 206,
            255, 113, 254, 243, 255, 2, 254, 208, 255, 149, 254, 253,
            255, 202, 255, 68, 254, 172, 255, 155, 255, 201, 255, 181,
            255, 238, 255, 179, 255, 189, 255, 192, 255, 203, 255, 239,
            255, 234, 255, 247, 255, 248, 255, 218, 255, 128, 255, 210,
            255, 173, 255, 187, 255, 208, 255, 224, 0, 0, 255, 229,
            255, 225, 255, 166, 255, 209, 255, 156, 255, 185, 255, 195,
            255, 204, 255, 195, 255, 229, 255, 248, 255, 251, 0, 0,
            0, 0, 255, 226, 255, 229, 255, 16, 255, 217, 255, 22,
            255, 159, 255, 163, 255, 23, 255, 232, 0, 0, 255, 189,
            255, 213, 255, 126, 255, 209, 255, 217, 255, 207, 255, 188,
            255, 239, 255, 214, 255, 95, 255, 122, 255, 228, 255, 116,
            255, 208, 255, 191, 255, 185, 92, 30, 199, 160, 254, 105,
            254, 101, 255, 15, 254, 220, 254, 219, 248, 101, 5, 67,
            0, 0, 0, 0, 0, 237, 0, 84, 0, 12, 30, 179,
            21, 43, 24, 104, 15, 77, 25, 9, 23, 195, 23, 177,
            19, 219, 26, 165, 18, 66, 26, 221, 23, 241, 18, 155,
            18, 73, 14, 228, 0, 0, 0, 191, 0, 12, 31, 120,
            16, 80, 17, 47, 19, 109, 7, 215, 10, 88, 15, 42,
            5, 51, 2, 166, 3, 60, 2, 218, 2, 47
    };

    Psarc::PsarcInfo psarcInfo = Psarc::read(psarcData);

    ASSERT(sizeof(expectedTOCPlainText) == psarcInfo.tocRaw.size());

    for (u64 i= 0; i < psarcInfo.tocRaw.size(); ++i)
    {
        ASSERT(expectedTOCPlainText[i] == psarcInfo.tocRaw[i]);
    }
}

static void installerTest() {
    if (Installer::isInstalled(".")) {
        std::filesystem::remove("settings.ini");
        std::filesystem::remove("songs");
    }

    ASSERT(!Installer::isInstalled("."));
    Installer::install(".");
    ASSERT(Installer::isInstalled("."));

    // uninstall
    std::filesystem::remove("settings.ini");
    std::filesystem::remove("songs");

    ASSERT(!Installer::isInstalled("."));
};

static void settingsTest() {
//    if (Installer::isInstalled(".")) {
//        std::filesystem::remove("settings.ini");
//        std::filesystem::remove("songs");
//    }
//
//    Installer::install(".");
//
//    char *args[] = {
//            "C:/temp/temp.exe", "-w", "1024", "-h", "768", "-l", "0", nullptr
//    };
//    int argc = sizeof(args) / sizeof(char *);
//    char **argv = args;
//
//    Settings::init(argc, argv);
//    Settings::save();
//
//    std::filesystem::remove("settings.ini");
//    std::filesystem::remove("songs");
}

int main(int argc, char *argv[]) {
    psarcTOCTest();
    settingsTest();
    installerTest();
    rijndaelTest();

    return 0;
}

#endif // TEST_BUILD